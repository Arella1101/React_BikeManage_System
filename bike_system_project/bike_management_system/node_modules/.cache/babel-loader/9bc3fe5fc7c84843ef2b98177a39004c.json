{"ast":null,"code":"import \"antd/lib/table/style/css\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/message/style/css\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/modal/style/css\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/select/style/css\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/form/style/css\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shuwen\\\\bike_system\\\\src\\\\pages\\\\order\\\\index.js\";\nimport React from 'react';\nimport axios from '../../axios';\nimport Utils from '../../utils/utils';\nimport BaseForm from '../../components/BaseForm';\nconst FormItem = _Form.Item;\nconst Option = _Select.Option;\nexport default class Order extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orderInfo: {},\n      orderConfirmVisble: false\n    };\n    this.params = {\n      page: 1\n    };\n    this.formList = [{\n      type: 'SELECT',\n      label: '城市',\n      field: 'city',\n      placeholder: '全部',\n      initialValue: '1',\n      width: 80,\n      list: [{\n        id: '0',\n        name: '全部'\n      }, {\n        id: '1',\n        name: '北京'\n      }, {\n        id: '2',\n        name: '天津'\n      }, {\n        id: '3',\n        name: '上海'\n      }]\n    }, {\n      type: '时间查询'\n    }, {\n      type: 'SELECT',\n      label: '订单状态',\n      field: 'order_status',\n      placeholder: '全部',\n      initialValue: '1',\n      width: 80,\n      list: [{\n        id: '0',\n        name: '全部'\n      }, {\n        id: '1',\n        name: '进行中'\n      }, {\n        id: '2',\n        name: '结束行程'\n      }]\n    }];\n\n    this.handleFilter = values => {\n      this.params = values;\n      this.requestList();\n    };\n\n    this.requestList = () => {\n      let _this = this;\n\n      axios.ajax({\n        url: '/order/list',\n        data: {\n          params: this.params\n        }\n      }).then(res => {\n        let list = res.result.item_list.map((item, index) => {\n          item.key = index;\n          return item;\n        });\n        this.setState({\n          list,\n          pagination: Utils.pagination(res, current => {\n            _this.params.page = current;\n\n            _this.requestList();\n          })\n        });\n      });\n    };\n\n    this.handleConfirm = () => {\n      let item = this.state.selectedItem;\n\n      if (!item) {\n        _Modal.info({\n          title: '信息',\n          content: '请选择一条订单进行结束'\n        });\n\n        return;\n      }\n\n      axios.ajax({\n        url: '/order/ebike_info',\n        data: {\n          params: {\n            orderId: item.id\n          }\n        }\n      }).then(res => {\n        if (res.code == 0) {\n          this.setState({\n            orderInfo: res.result,\n            orderConfirmVisble: true\n          });\n        }\n      });\n    };\n\n    this.handleFinishOrder = () => {\n      let item = this.state.selectedItem;\n      axios.ajax({\n        url: '/order/finish_order',\n        data: {\n          params: {\n            orderId: item.id\n          }\n        }\n      }).then(res => {\n        if (res.code == 0) {\n          _message.success('订单结束成功');\n\n          this.setState({\n            orderConfirmVisble: false\n          });\n          this.requestList();\n        }\n      });\n    };\n\n    this.onRowClick = (record, index) => {\n      console.log(record);\n      let selectKey = [index];\n      this.setState({\n        selectedRowKeys: selectKey,\n        selectedItem: record\n      });\n    };\n\n    this.openOrderDetail = () => {\n      let item = this.state.selectedItem;\n\n      if (!item) {\n        _Modal.info({\n          title: '信息',\n          content: '请先选择一条订单'\n        });\n\n        return;\n      }\n\n      window.open(`/#/common/order/detail/${item.id}`, '_blank');\n    };\n  }\n\n  componentDidMount() {\n    this.requestList();\n  }\n\n  render() {\n    const columns = [{\n      title: '订单编号',\n      dataIndex: 'order_sn'\n    }, {\n      title: '车辆编号',\n      dataIndex: 'bike_sn'\n    }, {\n      title: '用户名',\n      dataIndex: 'user_name'\n    }, {\n      title: '手机号',\n      dataIndex: 'mobile'\n    }, {\n      title: '里程',\n      dataIndex: 'distance',\n\n      render(distance) {\n        return distance / 1000 + 'Km';\n      }\n\n    }, {\n      title: '行驶时长',\n      dataIndex: 'total_time'\n    }, {\n      title: '状态',\n      dataIndex: 'status'\n    }, {\n      title: '开始时间',\n      dataIndex: 'start_time'\n    }, {\n      title: '结束时间',\n      dataIndex: 'end_time'\n    }, {\n      title: '订单金额',\n      dataIndex: 'total_fee'\n    }, {\n      title: '实付金额',\n      dataIndex: 'user_pay'\n    }];\n    const formItemLayout = {\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 19\n      }\n    };\n    const selectedRowKeys = this.state.selectedRowKeys;\n    const rowSelection = {\n      type: 'radio',\n      selectedRowKeys\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(_Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BaseForm, {\n      formList: this.formList,\n      filterSubmit: this.handleFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(_Card, {\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.openOrderDetail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }, \"\\u8BA2\\u5355\\u8BE6\\u60C5\"), /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      style: {\n        marginLeft: 10\n      },\n      onClick: this.handleConfirm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    }, \"\\u7ED3\\u675F\\u8BA2\\u5355\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Table, {\n      bordered: true,\n      columns: columns,\n      dataSource: this.state.list,\n      pagination: this.state.pagination,\n      rowSelection: rowSelection,\n      onRowClick: (record, index) => {\n        this.onRowClick(JSON.stringify(record), JSON.stringify(index));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(_Modal, {\n      title: \"\\u7ED3\\u675F\\u8BA2\\u5355\",\n      visible: this.state.orderConfirmVisble,\n      onCancel: () => {\n        this.setState({\n          orderConfirmVisble: false\n        });\n      },\n      onOk: this.handleFinishOrder,\n      width: 600,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Form, {\n      layout: \"horizontal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      label: \"\\u8F66\\u8F86\\u7F16\\u53F7\"\n    }, formItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 25\n      }\n    }), this.state.orderInfo.bike_sn), /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      label: \"\\u5269\\u4F59\\u7535\\u91CF\"\n    }, formItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 25\n      }\n    }), this.state.orderInfo.battery + '%'), /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      label: \"\\u884C\\u7A0B\\u5F00\\u59CB\\u65F6\\u95F4\"\n    }, formItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 25\n      }\n    }), this.state.orderInfo.start_time), /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      label: \"\\u5F53\\u524D\\u4F4D\\u7F6E\"\n    }, formItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 25\n      }\n    }), this.state.orderInfo.location))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Shuwen/bike_system/src/pages/order/index.js"],"names":["React","axios","Utils","BaseForm","FormItem","Item","Option","Order","Component","state","orderInfo","orderConfirmVisble","params","page","formList","type","label","field","placeholder","initialValue","width","list","id","name","handleFilter","values","requestList","_this","ajax","url","data","then","res","result","item_list","map","item","index","key","setState","pagination","current","handleConfirm","selectedItem","info","title","content","orderId","code","handleFinishOrder","success","onRowClick","record","console","log","selectKey","selectedRowKeys","openOrderDetail","window","open","componentDidMount","render","columns","dataIndex","distance","formItemLayout","labelCol","span","wrapperCol","rowSelection","marginTop","marginLeft","JSON","stringify","bike_sn","battery","start_time","location"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Button, Table, Form, Select, Modal, DatePicker, message} from 'antd'\nimport axios from '../../axios'\nimport Utils from '../../utils/utils'\nimport BaseForm from '../../components/BaseForm'\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nexport default class Order extends React.Component{\n    state  = {\n        orderInfo:{},\n        orderConfirmVisble:false\n    }\n    params = {\n        page: 1\n    }\n    formList = [\n        {\n            type:'SELECT',\n            label:'城市',\n            field:'city',\n            placeholder:'全部',\n            initialValue:'1',\n            width:80,\n            list: [{ id: '0', name: '全部' }, { id: '1', name: '北京' }, { id: '2', name: '天津' }, { id: '3', name: '上海' }]\n        },\n        {\n            type: '时间查询'\n        },\n        {\n            type: 'SELECT',\n            label: '订单状态',\n            field:'order_status',\n            placeholder: '全部',\n            initialValue: '1',\n            width: 80,\n            list: [{ id: '0', name: '全部' }, { id: '1', name: '进行中' }, { id: '2', name: '结束行程' }]\n        }\n    ]\n    componentDidMount(){\n        this.requestList()\n    }\n\n    handleFilter = values=>{\n        this.params = values;\n        this.requestList();\n    }\n    requestList = ()=>{\n        let _this = this;\n        axios.ajax({\n            url:'/order/list',\n            data:{\n                params: this.params\n            }\n        }).then((res)=>{\n            let list = res.result.item_list.map((item, index) => {\n                item.key = index;\n                return item;\n            });\n            this.setState({\n                list,\n                pagination: Utils.pagination(res, (current) => {\n                    _this.params.page = current;\n                    _this.requestList();\n                })\n            })\n        })\n    }\n    // 订单结束确认\n    handleConfirm = ()=>{\n        let item = this.state.selectedItem;\n        if (!item) {\n            Modal.info({\n                title: '信息',\n                content: '请选择一条订单进行结束'\n            })\n            return;\n        }\n        axios.ajax({\n            url:'/order/ebike_info',\n            data:{\n                params:{\n                    orderId: item.id\n                }\n            }\n        }).then((res)=>{\n            if(res.code ==0 ){\n                this.setState({\n                    orderInfo:res.result,\n                    orderConfirmVisble: true\n                })\n            }\n        })\n    }\n\n    // 结束订单\n    handleFinishOrder = ()=>{\n        let item = this.state.selectedItem;\n        axios.ajax({\n            url: '/order/finish_order',\n            data: {\n                params: {\n                    orderId: item.id\n                }\n            }\n        }).then((res) => {\n            if (res.code == 0) {\n                message.success('订单结束成功')\n                this.setState({\n                    orderConfirmVisble: false\n                })\n                this.requestList();\n            }\n        })\n    }\n    onRowClick = (record, index) => {\n        console.log(record);\n        let selectKey = [index];\n        this.setState({\n            selectedRowKeys: selectKey,\n            selectedItem: record\n        })\n    }\n\n    openOrderDetail = ()=>{\n        let item = this.state.selectedItem;\n        if (!item) {\n            Modal.info({\n                title: '信息',\n                content: '请先选择一条订单'\n            })\n            return;\n        }\n        window.open(`/#/common/order/detail/${item.id}`,'_blank')\n    }\n    render(){\n        const columns = [\n            {\n                title:'订单编号',\n                dataIndex:'order_sn'\n            },\n            {\n                title: '车辆编号',\n                dataIndex: 'bike_sn'\n            },\n            {\n                title: '用户名',\n                dataIndex: 'user_name'\n            },\n            {\n                title: '手机号',\n                dataIndex: 'mobile'\n            },\n            {\n                title: '里程',\n                dataIndex: 'distance',\n                render(distance){\n                    return distance/1000 + 'Km';\n                }\n            },\n            {\n                title: '行驶时长',\n                dataIndex: 'total_time'\n            },\n            {\n                title: '状态',\n                dataIndex: 'status'\n            },\n            {\n                title: '开始时间',\n                dataIndex: 'start_time'\n            },\n            {\n                title: '结束时间',\n                dataIndex: 'end_time'\n            },\n            {\n                title: '订单金额',\n                dataIndex: 'total_fee'\n            },\n            {\n                title: '实付金额',\n                dataIndex: 'user_pay'\n            }\n        ]\n        const formItemLayout = {\n            labelCol:{span:5},\n            wrapperCol:{span:19}\n        }\n        const selectedRowKeys = this.state.selectedRowKeys;\n        const rowSelection = {\n            type: 'radio',\n            selectedRowKeys\n        }\n        return (\n            <div style={{width:'100%'}} >\n                <Card>\n                    <BaseForm formList={this.formList} filterSubmit={this.handleFilter}/>\n                </Card>\n                <Card style={{marginTop:10}}>\n                    <Button type=\"primary\" onClick={this.openOrderDetail}>订单详情</Button>\n                    <Button type=\"primary\" style={{marginLeft:10}} onClick={this.handleConfirm}>结束订单</Button>\n                </Card>\n                <div className=\"content-wrap\">\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.list}\n                        pagination={this.state.pagination}\n                        rowSelection={rowSelection}\n                        onRowClick={\n                            (record, index)=>{\n                                this.onRowClick(JSON.stringify(record), JSON.stringify(index));\n\n                            } \n                           \n                        }\n                    />\n                </div>\n                <Modal\n                    title=\"结束订单\"\n                    visible={this.state.orderConfirmVisble}\n                    onCancel={()=>{\n                        this.setState({\n                            orderConfirmVisble:false\n                        })\n                    }}\n                    onOk={this.handleFinishOrder}\n                    width={600}\n                >\n                    <Form layout=\"horizontal\">\n                        <FormItem label=\"车辆编号\" {...formItemLayout}>\n                            {this.state.orderInfo.bike_sn}\n                        </FormItem>\n                        <FormItem label=\"剩余电量\" {...formItemLayout}>\n                            {this.state.orderInfo.battery + '%'}\n                        </FormItem>\n                        <FormItem label=\"行程开始时间\" {...formItemLayout}>\n                            {this.state.orderInfo.start_time}\n                        </FormItem>\n                        <FormItem label=\"当前位置\" {...formItemLayout}>\n                            {this.state.orderInfo.location}\n                        </FormItem>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}