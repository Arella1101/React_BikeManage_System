{"ast":null,"code":"import \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/select/style/css\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/radio/style/css\";\nimport _Radio from \"antd/lib/radio\";\nimport \"antd/lib/form/style/css\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shuwen\\\\bike_system\\\\src\\\\pages\\\\form\\\\register.js\";\nimport React from 'react';\nimport moment from 'moment';\nconst FormItem = _Form.Item;\nconst RadioGroup = _Radio.Group;\nconst Option = _Select.Option;\nconst TextArea = _Input.TextArea;\n\nclass FormRegister extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  // handleSubmit = ()=>{\n  //     let userInfo = this.props.form.getFieldsValue();\n  //     console.log(JSON.stringify(userInfo))\n  //     message.success(`${userInfo.userName} 恭喜你，您通过本次表单组件学习，当前密码为：${userInfo.userPwd}`)\n  // }\n  // getBase64 = (img, callback)=>{\n  //     const reader = new FileReader();\n  //     reader.addEventListener('load', () => callback(reader.result));\n  //     reader.readAsDataURL(img);\n  // }\n  // handleChange = (info) => {\n  //     if (info.file.status === 'uploading') {\n  //         this.setState({ loading: true });\n  //         return;\n  //     }\n  //     if (info.file.status === 'done') {\n  //         // Get this url from response in real world.\n  //         this.getBase64(info.file.originFileObj, imageUrl => this.setState({\n  //             userImg:imageUrl,\n  //             loading: false,\n  //         }));\n  //     }\n  // }\n  render() {\n    const formItemLayout = {\n      labelCol: {\n        xs: 24,\n        sm: 4\n      },\n      wrapperCol: {\n        xs: 24,\n        sm: 12\n      }\n    };\n    const offsetLayout = {\n      wrapperCol: {\n        xs: 24,\n        sm: {\n          span: 12,\n          offset: 4\n        }\n      }\n    };\n    const rowObject = {\n      minRows: 4,\n      maxRows: 6\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(_Card, {\n      title: \"\\u6CE8\\u518C\\u8868\\u5355\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Form, {\n      layout: \"horizontal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      name: \"username\",\n      label: \"Username\",\n      rules: [{\n        required: true,\n        message: '用户名不能为空'\n      }, {\n        min: 5,\n        max: 10,\n        message: '长度不在范围内'\n      }, {\n        pattern: new RegExp('^\\\\w+$', 'g'),\n        message: '用户名必须为字母或者数字'\n      }]\n    }, formItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237\\u540D\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      name: \"password\",\n      label: \"Password\",\n      rules: []\n    }, formItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(_Input, {\n      type: \"password\",\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      name: \"gender\",\n      label: \"Gender\",\n      rules: [],\n      initialValue: \"1\"\n    }, formItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(RadioGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(_Radio, {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    }, \"\\u7537\"), /*#__PURE__*/React.createElement(_Radio, {\n      value: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }, \"\\u5973\"))), /*#__PURE__*/React.createElement(FormItem, Object.assign({}, offsetLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 29\n      }\n    }, \"\\u6CE8\\u518C\")))));\n  }\n\n}\n\nexport default FormRegister;","map":{"version":3,"sources":["C:/Users/Shuwen/bike_system/src/pages/form/register.js"],"names":["React","moment","FormItem","Item","RadioGroup","Group","Option","TextArea","FormRegister","Component","state","render","formItemLayout","labelCol","xs","sm","wrapperCol","offsetLayout","span","offset","rowObject","minRows","maxRows","width","required","message","min","max","pattern","RegExp","handleSubmit"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Card,Form,Button,Input,Checkbox,Radio,Select,Switch,DatePicker,TimePicker,Upload,Icon,message, InputNumber} from 'antd'\r\nimport moment from 'moment';\r\nconst FormItem = Form.Item;\r\nconst RadioGroup = Radio.Group;\r\nconst Option = Select.Option;\r\nconst TextArea = Input.TextArea;\r\nclass FormRegister extends React.Component{\r\n\r\n    state={}\r\n\r\n    // handleSubmit = ()=>{\r\n    //     let userInfo = this.props.form.getFieldsValue();\r\n    //     console.log(JSON.stringify(userInfo))\r\n    //     message.success(`${userInfo.userName} 恭喜你，您通过本次表单组件学习，当前密码为：${userInfo.userPwd}`)\r\n    // }\r\n\r\n    // getBase64 = (img, callback)=>{\r\n    //     const reader = new FileReader();\r\n    //     reader.addEventListener('load', () => callback(reader.result));\r\n    //     reader.readAsDataURL(img);\r\n    // }\r\n\r\n    // handleChange = (info) => {\r\n    //     if (info.file.status === 'uploading') {\r\n    //         this.setState({ loading: true });\r\n    //         return;\r\n    //     }\r\n    //     if (info.file.status === 'done') {\r\n    //         // Get this url from response in real world.\r\n    //         this.getBase64(info.file.originFileObj, imageUrl => this.setState({\r\n    //             userImg:imageUrl,\r\n    //             loading: false,\r\n    //         }));\r\n    //     }\r\n    // }\r\n\r\n    render(){\r\n       \r\n        const formItemLayout = {\r\n            labelCol:{\r\n                xs:24,\r\n                sm:4\r\n            },\r\n            wrapperCol:{\r\n                xs:24,\r\n                sm:12\r\n            }\r\n        }\r\n        const offsetLayout = {\r\n            wrapperCol:{\r\n                xs:24,\r\n                sm:{\r\n                    span:12,\r\n                    offset:4\r\n                }\r\n            }\r\n        }\r\n        const rowObject = {\r\n            minRows: 4, maxRows: 6\r\n        }\r\n        return (\r\n            <div style={{width:'100%'}}>\r\n                <Card title=\"注册表单\">\r\n                    <Form layout=\"horizontal\">\r\n                        <FormItem \r\n\r\n                        name=\"username\"\r\n                        label = \"Username\"\r\n                        rules={[\r\n                            {\r\n                                required:true,\r\n                                message:'用户名不能为空'\r\n                            },\r\n                            {\r\n                                min:5,max:10,\r\n                                message:'长度不在范围内'\r\n                            },\r\n                            {\r\n                                pattern:new RegExp('^\\\\w+$','g'),\r\n                                message:'用户名必须为字母或者数字'\r\n                            }\r\n                        ]}\r\n                         {...formItemLayout} >\r\n                        <Input placeholder=\"请输入用户名\" />\r\n\r\n\r\n                        </FormItem>\r\n                        <FormItem \r\n\r\n                        name=\"password\"\r\n                        label = \"Password\"\r\n                        rules={[]}\r\n                        {...formItemLayout} >\r\n                        <Input type=\"password\" placeholder=\"请输入密码\" />                   \r\n                        </FormItem>\r\n\r\n                        <FormItem \r\n                        \r\n                        name=\"gender\"\r\n                        label = \"Gender\"\r\n                        rules={[]}\r\n                        initialValue='1'\r\n                        {...formItemLayout} \r\n                        \r\n                        >\r\n\r\n                        <RadioGroup>\r\n                            <Radio value=\"1\">男</Radio>\r\n                            <Radio value=\"2\">女</Radio>\r\n                        </RadioGroup>\r\n                        </FormItem>\r\n                        {/* <FormItem label=\"年龄\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('age', {\r\n                                    initialValue: 18\r\n                                })(\r\n                                    <InputNumber  />\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem label=\"当前状态\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('state', {\r\n                                    initialValue: '2'\r\n                                })(\r\n                                    <Select>\r\n                                        <Option value=\"1\">咸鱼一条</Option>\r\n                                        <Option value=\"2\">风华浪子</Option>\r\n                                        <Option value=\"3\">北大才子一枚</Option>\r\n                                        <Option value=\"4\">百度FE</Option>\r\n                                        <Option value=\"5\">创业者</Option>\r\n                                    </Select>\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem label=\"爱好\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('interest', {\r\n                                    initialValue: ['2','5']\r\n                                })(\r\n                                    <Select mode=\"multiple\">\r\n                                        <Option value=\"1\">游泳</Option>\r\n                                        <Option value=\"2\">打篮球</Option>\r\n                                        <Option value=\"3\">踢足球</Option>\r\n                                        <Option value=\"4\">跑步</Option>\r\n                                        <Option value=\"5\">爬山</Option>\r\n                                        <Option value=\"6\">骑行</Option>\r\n                                        <Option value=\"7\">桌球</Option>\r\n                                        <Option value=\"8\">麦霸</Option>\r\n                                    </Select>\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem label=\"是否已婚\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('isMarried', {\r\n                                    valuePropName:'checked',\r\n                                    initialValue: true\r\n                                })(\r\n                                    <Switch/>\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem label=\"生日\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('birthday',{\r\n                                    initialValue:moment('2018-08-08')\r\n                                })(\r\n                                    <DatePicker\r\n                                        showTime\r\n                                        format=\"YYYY-MM-DD HH:mm:ss\"\r\n                                    />\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem label=\"联系地址\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('address',{\r\n                                    initialValue:'北京市海淀区奥林匹克公园'\r\n                                })(\r\n                                    <TextArea\r\n                                        autosize={rowObject}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem label=\"早起时间\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('time')(\r\n                                    <TimePicker/>\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem label=\"头像\" {...formItemLayout}>\r\n                            {\r\n                                getFieldDecorator('userImg')(\r\n                                    <Upload\r\n                                        listType=\"picture-card\"\r\n                                        showUploadList={false}\r\n                                        action=\"//jsonplaceholder.typicode.com/posts/\"\r\n                                        onChange={this.handleChange}\r\n                                    >\r\n                                    {this.state.userImg?<img src={this.state.userImg}/>:<Icon type=\"plus\"/>}\r\n                                    </Upload>\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                        <FormItem {...offsetLayout}>\r\n                            {\r\n                                getFieldDecorator('userImg')(\r\n                                   <Checkbox>我已阅读过<a href=\"#\">慕课协议</a></Checkbox>\r\n                                )\r\n                            }\r\n                        </FormItem> */}\r\n                        <FormItem {...offsetLayout}>\r\n                            <Button type=\"primary\" onClick={this.handleSubmit}>注册</Button>\r\n                        </FormItem>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default FormRegister;"]},"metadata":{},"sourceType":"module"}